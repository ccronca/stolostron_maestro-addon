apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: maestro
    template: maestro
  name: maestro
  namespace: '{{ .Values.global.namespace }}'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: maestro
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: maestro
    spec:
      containers:
      - command:
        - "/usr/local/bin/maestro"
        - server
        - "--client-id=maestro-$(POD_NAME)"
        - "--mqtt-config-file=/secrets/mqtt/config.yaml"
        - "--db-host-file=/secrets/rds/db.host"
        - "--db-port-file=/secrets/rds/db.port"
        - "--db-user-file=/secrets/rds/db.user"
        - "--db-password-file=/secrets/rds/db.password"
        - "--db-name-file=/secrets/rds/db.name"
        - "--db-sslmode=disable"
        - "--db-max-open-connections=50"
        - "--server-hostname=0.0.0.0"
        - "--enable-ocm-mock=true"
        - "--enable-jwt=false"
        - "--enable-sentry=false"
        - "--http-server-bindport=8000"
        - "--http-read-timeout=5s"
        - "--http-write-timeout=30s"
        - "--enable-grpc-server=true"
        - "--grpc-server-bindport=8090"
        - "--alsologtostderr"
        - "-v={{ .Values.global.logLevel }}"
        env:
        - name: AMS_ENV
          value: development
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: {{ .Values.global.imageOverrides.maestroImage }}
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        ports:
        - name: http-port
          containerPort: 8000
        - name: grpc-port
          containerPort: 8090
        - name: readiness-port
          containerPort: 8083
        livenessProbe:
          httpGet:
            path: "/api/maestro"
            port: http-port
          initialDelaySeconds: 15
          periodSeconds: 5
        name: service
        readinessProbe:
          httpGet:
            httpHeaders:
            - name: User-Agent
              value: Probe
            path: "/healthcheck"
            port: readiness-port
          initialDelaySeconds: 20
          periodSeconds: 10
        resources:
          limits:
            cpu: '1'
            memory: 1Gi
          requests:
            cpu: 200m
            memory: 512Mi
        volumeMounts:
        - mountPath: "/secrets/rds"
          name: maestro-db-config
      initContainers:
      - command:
        - "/usr/local/bin/maestro"
        - migration
        - "--db-host-file=/secrets/rds/host"
        - "--db-port-file=/secrets/rds/port"
        - "--db-user-file=/secrets/rds/user"
        - "--db-password-file=/secrets/rds/password"
        - "--db-name-file=/secrets/rds/name"
        - "--alsologtostderr"
        - "-v={{ .Values.global.logLevel }}"
        image: {{ .Values.global.imageOverrides.maestroImage }}
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        name: migration
        volumeMounts:
        - mountPath: "/secrets/rds"
          name: maestro-db-config
      serviceAccountName: maestro
      volumes:
      - name: maestro-db-config
        secret:
          secretName: maestro-db-config
