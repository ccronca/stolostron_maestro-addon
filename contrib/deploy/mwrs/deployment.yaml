apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-manager-work-cloudevents-controller
  namespace: open-cluster-management-hub
  labels:
    app: cluster-manager-work-cloudevents-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cluster-manager-work-cloudevents-controller
  template:
    metadata:
      labels:
        app: cluster-manager-work-cloudevents-controller
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 70
            podAffinityTerm:
              topologyKey: failure-domain.beta.kubernetes.io/zone
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - cluster-manager-work-cloudevents-controller
          - weight: 30
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - cluster-manager-work-cloudevents-controller
      serviceAccountName: work-cloudevents-controller-sa
      containers:
      - name: cluster-manager-work-cloudevents-controller
        image:  quay.io/open-cluster-management/work:latest
        imagePullPolicy: IfNotPresent
        args:
          - "/work"
          - "manager"
          - "--work-driver=grpc"
          - "--work-driver-config=/var/run/secrets/hub/grpcconfig"
          - "--cloudevents-client-id=mwrsctrl-client"
          - "--disable-leader-election"
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          runAsNonRoot: true
          readOnlyRootFilesystem: true
        livenessProbe:
          httpGet:
            path: /healthz
            scheme: HTTPS
            port: 8443
          initialDelaySeconds: 2
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            scheme: HTTPS
            port: 8443
          initialDelaySeconds: 2
        resources:
          requests:
            cpu: 2m
            memory: 16Mi
        volumeMounts:
        - name: tmpdir
          mountPath: /tmp
        - mountPath: /var/run/secrets/hub
          name: grpcconfig
          readOnly: true
      volumes:
      - name: tmpdir
        emptyDir: { }
      - name: grpcconfig
        secret:
          secretName: work-controller-grpcconfig
